<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:elasticsearch="http://www.mulesoft.org/schema/mule/elasticsearch"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/elasticsearch http://www.mulesoft.org/schema/mule/elasticsearch/current/mule-elasticsearch.xsd">

	<munit:config name="search-operation-test-suite.xml" />
	<configuration-properties doc:name="Configuration properties"
		doc:id="43e43249-8aa9-476f-aa53-66fcfb7eb77c" file="mule-application.properties" />

	<elasticsearch:config name="Elasticsearch_HTTP_Config6"
		doc:name="Elasticsearch Config" doc:id="07349911-a3c3-4468-adfb-92fdec18ea5f">
		<elasticsearch:http-connection host="${elastic.host}"
			port="${elastic.port}" />
	</elasticsearch:config>

	<munit:test name="jsonQuerySearchWithJsonFileFlowTest"
		description="Test" doc:id="911bfee5-7eb6-4e2c-9bdb-1ccb793cfe62">
		<munit:execution>
			<elasticsearch:search-using-json-data
				doc:name="Search - JSON Query" doc:id="473bb738-9a23-4da6-a7f5-85010de8b3d7"
				config-ref="Elasticsearch_HTTP_Config6" jsonfile="input/match-all-query.json">
			</elasticsearch:search-using-json-data>
			<logger level="INFO" doc:name="Logger"
				doc:id="5875d103-14ea-46b7-bbd5-92bb0f323f9e" message="#[payload]" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="6a886161-abdf-40be-97be-a178a08e7263" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="jsonQuerySearchWithTextFlowTest"
		description="Test" doc:id="a7d26e30-e1c1-49e9-bb57-8ce05554ab70">
		<munit:execution>
			<elasticsearch:search-using-json-data
				doc:name="Search - JSON Query" doc:id="85e2e967-c75b-4f8b-866a-f268cc18d6ff"
				config-ref="Elasticsearch_HTTP_Config6">
				<elasticsearch:json-text>{
	&quot;query&quot;: {
				&quot;multi_match&quot; : {
					&quot;query&quot; : &quot;Nanette Dale Virginia Owens&quot;,
					&quot;type&quot;: &quot;best_fields&quot;,
					&quot;fields&quot;: [ &quot;lastname&quot;, &quot;firstname&quot; ],
					&quot;operator&quot; : &quot;or&quot;
				}
	}
}
				</elasticsearch:json-text>
			</elasticsearch:search-using-json-data>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="2c305d33-8832-4704-8077-1fa85e99b5d0" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="clearScrollFlowTest" description="Test"
		doc:id="7ce6f1e3-c06b-46ef-b8ef-d5ed35d83c79">
		<munit:execution>
			<elasticsearch:create-index doc:name="Index - Create"
				doc:id="e6438bba-d2c9-44c8-8100-1d859a1642b3" config-ref="Elasticsearch_HTTP_Config6"
				index="search_index_1">
			</elasticsearch:create-index>

			<elasticsearch:search config-ref="Elasticsearch_HTTP_Config6"
				searchType="DFS_QUERY_THEN_FETCH" scrollIntervalTime="${searchScroll.timeInterval}"
				doc:name="Search">
				<elasticsearch:query-configuration>
					<elasticsearch:match-all-query
						doc:name="Search scroll match all" doc:id="c40ff0a7-8c13-43fb-af13-250ae6bec2ef" />
				</elasticsearch:query-configuration>
				<elasticsearch:indices>
					<elasticsearch:index value="search_index_1" />
				</elasticsearch:indices>
			</elasticsearch:search>

			<logger level="INFO" doc:name="Logger"
				doc:id="13912a16-ba0d-42b4-a228-72e8ef90dbce" message="#[payload.scrollId]" />

			<elasticsearch:clear-scroll doc:name="Search - Clear Scroll"
				doc:id="ad12ffda-3080-4a60-af19-957bca6d989d" config-ref="Elasticsearch_HTTP_Config6">
				<elasticsearch:scroll-ids>
					<elasticsearch:scroll-id value="#[payload.scrollId]" />
				</elasticsearch:scroll-ids>
			</elasticsearch:clear-scroll>

			<logger level="INFO" doc:name="Logger"
				doc:id="8bfbf7cc-c02f-4606-81b2-da518363e6c1" message="#[payload]" />

			<elasticsearch:delete-index doc:name="Index - Delete"
				doc:id="3ae3c4bb-5f60-42c4-b1d6-a74a1b1aef5f" config-ref="Elasticsearch_HTTP_Config6"
				index="search_index_1" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="b81c16ee-5d61-4bc9-9031-6ab968eb1950" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="scrollFlowTest" description="Test"
		doc:id="d6d416be-ef92-4cef-8591-2b8dee7ec157">
		<munit:execution>
			<elasticsearch:create-index doc:name="Index - Create"
				doc:id="ef9a053e-40cc-4ba7-bcb2-1b34b52382f1" config-ref="Elasticsearch_HTTP_Config6"
				index="search_index_2">
			</elasticsearch:create-index>

			<elasticsearch:search config-ref="Elasticsearch_HTTP_Config6"
				searchType="DFS_QUERY_THEN_FETCH" scrollIntervalTime="${searchScroll.timeInterval}"
				doc:name="Search">
				<elasticsearch:query-configuration>
					<elasticsearch:match-all-query
						doc:name="Search scroll match all" doc:id="88fdd329-4e67-429b-b877-4bb8d65ade28" />
				</elasticsearch:query-configuration>
				<elasticsearch:indices>
					<elasticsearch:index value="search_index_2" />
				</elasticsearch:indices>
			</elasticsearch:search>

			<logger level="INFO" doc:name="Logger"
				doc:id="b3a0b8a4-efa6-418a-8326-ac6154b72f4f" message="#[payload.scrollId]" />

			<elasticsearch:search-scroll doc:name="Search - Scroll"
				doc:id="b7ef9fc5-8e19-4348-83d6-699485da3419" config-ref="Elasticsearch_HTTP_Config6"
				scrollId="#[payload.scrollId]" timeValue="20" />

			<logger level="INFO" doc:name="Logger"
				doc:id="54cd0ee2-dfa1-4037-9e24-12ac6bb7c8cd" message="#[payload]" />

			<elasticsearch:delete-index doc:name="Index - Delete"
				doc:id="a466f964-2a7e-435d-bbdc-d99855791436" config-ref="Elasticsearch_HTTP_Config6"
				index="search_index_2" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="b792959b-357f-4661-abce-a1858523bb18" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchMatchAllQueryFlowTest" description="Test"
		doc:id="21507211-31da-426f-b3af-4b7fb65c5069">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query"
				doc:id="9a4480e0-2908-4d9c-bf53-e7c291a682f0" config-ref="Elasticsearch_HTTP_Config6"
				searchType="DFS_QUERY_THEN_FETCH" routing="1" preference="1">
				<elasticsearch:query-configuration>
					<elasticsearch:match-all-query boost="2.0" />
				</elasticsearch:query-configuration>
				<elasticsearch:search-source-configuration
					size="9" sortOrder="ASC" fetchSource="false" profile="true"
					explain="true" trackScores="true" trackTotalHits="true" version="true"
					seqNoAndPrimaryTerm="true" sortByFieldName="c" from="1" timeout="10"
					minimumScore="1" terminateAfter="1" trackTotalHitsUpTo="1">
					<elasticsearch:include-fields>
						<elasticsearch:include-field value="a" />
					</elasticsearch:include-fields>
					<elasticsearch:exclude-fields>
						<elasticsearch:exclude-field value="b" />
					</elasticsearch:exclude-fields>
				</elasticsearch:search-source-configuration>
				<elasticsearch:search-request-optional-configuration
					allowPartialSearchResults="true" requestCache="true"
					batchedReduceSize="3" ccsMinimizeRoundtrips="true"
					maxConcurrentShardRequests="2" preFilterShardSize="2" />
				<elasticsearch:indices>
					<elasticsearch:index value="index10" />
				</elasticsearch:indices>
				<elasticsearch:indices-options
					ignoreUnavailable="true" allowNoIndices="true" expandWildcardsOpen="true"
					expandWildcardsClosed="true" allowAliasesToMultipleIndices="true"
					forbidClosedIndices="true" ignoreAliases="true" ignoreThrottled="true" />
			</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="b4364669-9880-458e-9751-64b40a073aa6" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchWithScrollIntervalTimeFlowTest"
		description="Test" doc:id="a9956983-4bcd-4e32-9a02-3055e4ce3457">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query"
				doc:id="a37e31fd-6cf7-4517-a6b5-829ff2a04fbc" config-ref="Elasticsearch_HTTP_Config6"
				searchType="QUERY_THEN_FETCH" scrollIntervalTime="10">
				<elasticsearch:query-configuration>
					<elasticsearch:match-all-query />
				</elasticsearch:query-configuration>
			</elasticsearch:search>
			<logger level="INFO" doc:name="Logger"
				doc:id="d9ef41bc-a260-4da4-9d82-3a4433c2e16a" message="#[payload]" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="bbd0ce1c-2c82-4846-9ba0-c21b94d422f8" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchMatchPhrasePrefixQueryFlowTest"
		description="Test" doc:id="46557d13-f89a-476e-85fb-34b956aad3eb">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query"
				doc:id="2751639b-d0a9-4d7e-9a52-69a9a9aa0d62" config-ref="Elasticsearch_HTTP_Config6"
				scrollIntervalTime="10">
				<elasticsearch:query-configuration>
					<elasticsearch:match-phrase-prefix-query
						field="${searchMatchPhrasePrefix.field}" queryString="${searchMatchPhrasePrefix.query}"
						analyzer="standard" maxExpansions="${searchMatchPhrasePrefix.maxExpansion}"
						boost="${searchMatchPhrasePrefix.boost}" />
				</elasticsearch:query-configuration>
			</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="9ddcc13b-1211-4587-b964-080c79965d6a" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchMatchPhraseQueryFlowTest"
		description="Test" doc:id="a451904f-9278-44a8-8f9e-8c207193a1a2">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query"
				doc:id="f83dee24-f84b-4ef1-9ba1-89226970ff9c" config-ref="Elasticsearch_HTTP_Config6"
				scrollIntervalTime="10">
				<elasticsearch:query-configuration>
					<elasticsearch:match-phrase-query
						queryString="${searchMatchPhrase.query}" analyzer="standard"
						boost="${searchMatchPhrase.boost}" field="${searchMatchPhrase.field}"
						zeroTermsQuery="ALL" />
				</elasticsearch:query-configuration>
			</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="734cfc44-8cbd-45a0-b0b4-469d3d7390b3" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchMatchQueryFlowTest" description="Test"
		doc:id="bc569702-4a08-42ff-8aa1-4f9122cf6f5b">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query"
				doc:id="a9f7fead-0c82-4a14-9681-4d313db47475" config-ref="Elasticsearch_HTTP_Config6"
				scrollIntervalTime="10">
				<elasticsearch:query-configuration>
					<elasticsearch:match-query searchString="${searchMatch.searchString}"
						field="${searchMatch.field}" autoGenerateSynonymsPhraseQuery="true"
						zeroTermsQuery="ALL" operator="OR" fuzzyTranspositions="false"
						lenient="true" minimumShouldMatch="1">
					</elasticsearch:match-query>
				</elasticsearch:query-configuration>
			</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="7c97424b-e362-4d44-98c8-54e5f39564e1" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchMultiMatchQueryFlowTest"
		description="Test" doc:id="ca29f350-7f6d-49d5-99de-4fb3bf35b2ec">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query"
				doc:id="f02b7db6-75ff-4b11-b8d3-f069ec683b4e" config-ref="Elasticsearch_HTTP_Config6"
				scrollIntervalTime="10">
				<elasticsearch:query-configuration>
					<elasticsearch:multi-match-query
						autoGenerateSynonymsPhraseQuery="true" tieBreaker="${multiMatchQuery.tieBreaker}"
						minimumShouldMatch="${multiMatchQuery.minimumShouldMatch}"
						searchString="${multiMatchQuery.searchString}" zeroTermsQuery="ALL"
						operator="OR" type="BEST_FIELDS">
						<elasticsearch:fields>
							<elasticsearch:field value="gender" />
							<elasticsearch:field value="lastname" />
							<elasticsearch:field value="address" />
						</elasticsearch:fields>
					</elasticsearch:multi-match-query>
				</elasticsearch:query-configuration>
			</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="56e67eae-37bc-4b44-b109-83fe9aebab5b" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
	
	<munit:test name="searchQueryStringQueryFlowTest"
		description="Test" doc:id="a443e01c-47a4-49cc-a65b-aa3019cee61f">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query" doc:id="0b2229d9-f504-4fab-8c7f-494d4a5ce031" config-ref="Elasticsearch_HTTP_Config6" scrollIntervalTime="10">
			<elasticsearch:query-configuration>
				<elasticsearch:query-string-query
					allowLeadingWildcard="true" enablePositionIncrements="true"
					queryString="${searchQueryString.queryString}" analyzeWildcard="true"
					autoGenerateSynonymsPhraseQuery="true" fuzzyTranspositions="true"
					lenient="true" phraseSlop="${searchQueryString.phraseSlop}"
					tieBreaker="${searchQueryString.tieBreaker}" boost="3"
					fuzzyMaxExpansions="10" fuzzyPrefixLength="0"
					minimumShouldMatch="${searchQueryString.minShouldMatch}"
					defaultOperator="OR">
					<elasticsearch:fields-and-boosts>
						<elasticsearch:fields-and-boost
							key="firstname" value="4" />
						<elasticsearch:fields-and-boost
							key="lastname" value="2" />
						<elasticsearch:fields-and-boost
							key="address" value="1" />
					</elasticsearch:fields-and-boosts>
				</elasticsearch:query-string-query>
			</elasticsearch:query-configuration>
		</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="73a068cb-ff8e-442c-b35f-e397672d363b" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>

	<munit:test name="searchSimpleQueryStringFlowTest"
		description="Test" doc:id="2b553dec-0726-4aa8-a771-877252d4c882">
		<munit:execution>
			<elasticsearch:search doc:name="Search - Query" doc:id="342a4bd4-1e85-4322-9a75-07c546e393a4" config-ref="Elasticsearch_HTTP_Config6" scrollIntervalTime="10">
			<elasticsearch:query-configuration>
				<elasticsearch:simple-query-string
					queryString="${searchSimpleQueryString.queryString}"
					analyzeWildcard="true" analyzer="standard"
					autoGenerateSynonymsPhraseQuery="true" fuzzyTranspositions="true"
					lenient="true" minimumShouldMatch="${searchSimpleQueryString.minShouldMatch}"
					simpleQueryStringFlag="ALL" defaultOperator="OR">
					<elasticsearch:fields-and-boosts>
						<elasticsearch:fields-and-boost
							key="firstname" value="4" />
						<elasticsearch:fields-and-boost
							key="lastname" value="2" />
						<elasticsearch:fields-and-boost
							key="address" value="1" />
					</elasticsearch:fields-and-boosts>
				</elasticsearch:simple-query-string>
			</elasticsearch:query-configuration>
		</elasticsearch:search>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that"
				doc:id="720df0af-e9a1-40f8-9ae4-b1e6daca9a6f" is="#[MunitTools::notNullValue()]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
</mule>
