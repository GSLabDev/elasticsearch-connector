<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:elasticsearch="http://www.mulesoft.org/schema/mule/elasticsearch" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/elasticsearch http://www.mulesoft.org/schema/mule/elasticsearch/current/mule-elasticsearch.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="9f66c6d5-fe9b-438c-929b-da29282872c8" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<elasticsearch:config name="Elasticsearch_Config" doc:name="Elasticsearch Config" doc:id="e7e261e5-1ce9-498a-ad82-7e62fd8f11eb" >
		<elasticsearch:http-connection host="${elastic.host}" />
	</elasticsearch:config>
	
	<configuration-properties doc:name="Configuration properties" doc:id="38d3c87e-921d-45a0-ac72-da61463ccbc7" file="mule-application.properties" />
	<flow name="SearchPhrase" doc:id="1cdc935c-3ef6-469a-94e7-22fa49e84edb">
		<http:listener doc:name="Listener"
			doc:id="13285cd4-bb7f-40ba-93b8-e113ba3cce1c" config-ref="HTTP_Listener_config"
			path="/searchOperation" >
		</http:listener>
		<set-variable value="#[attributes.queryParams.querytype]" doc:name="Set Variable"
			doc:id="a33aaf60-23e7-4c8e-8738-9796feaf8937" variableName="searchQuery" />
		<logger level="INFO" doc:name="Logger"
			doc:id="96bafaeb-1fcb-4971-b06f-d06187ca240c" message="Set variable value #[vars.searchQuery]" />
		<choice doc:name="Choice" doc:id="d1355aea-0240-4a79-aca3-db228412e8c4">
			<when expression="#[vars.searchQuery=='multi-match-query']">
				<elasticsearch:search doc:name="Multi Match"
					doc:id="d45b3b45-f5e8-4509-bac9-e7554f1f1d91" config-ref="Elasticsearch_Config"
					searchType="DFS_QUERY_THEN_FETCH">
					<elasticsearch:query-configuration>
						<elasticsearch:query-type >
							<elasticsearch:multi-match-query
								minimumShouldMatch="10%" searchString="${searchMultiMatch.searchString}"
								operator="OR" autoGenerateSynonymsPhraseQuery="true" type="BEST_FIELDS"
								tieBreaker="1.0" zeroTermsQuery="ALL">
								<elasticsearch:fields>
									<elasticsearch:field value="${searchMultiMatch.fieldA}" />
									<elasticsearch:field value="${searchMultiMatch.fieldB}" />
									<elasticsearch:field value="${searchMultiMatch.fieldC}" />
								</elasticsearch:fields>
							</elasticsearch:multi-match-query>
						</elasticsearch:query-type>
					</elasticsearch:query-configuration>
					<elasticsearch:search-source-configuration
						size="${searchSource.size}" timeout="${searchSource.timeout}" sortOrder="ASC" from="${searchSource.from}">
						<elasticsearch:include-fields>
							<elasticsearch:include-field value="${searchMultiMatch.includeField}" />
						</elasticsearch:include-fields>
					</elasticsearch:search-source-configuration>
					<elasticsearch:indices>
						<elasticsearch:index value="${search.index}" />
					</elasticsearch:indices>
				</elasticsearch:search>
				<logger level="INFO" doc:name="Logger"
					doc:id="3d69a761-c71e-4948-b98d-2490af08ebb3" message="#[payload]" />

			</when>
			<when expression="#[vars.searchQuery=='match-query']">
				<elasticsearch:search doc:name="Match Query"
					doc:id="f072cb50-cd00-44b5-b6b3-f7a8cd28e969" config-ref="Elasticsearch_Config"
					searchType="DFS_QUERY_THEN_FETCH">
					<elasticsearch:query-configuration>
						<elasticsearch:query-type >
							<elasticsearch:match-query field="${searchMatchQuery.field}"
								searchString="${searchMatchQuery.searchString}" zeroTermsQuery="ALL"
								autoGenerateSynonymsPhraseQuery="true" />
						</elasticsearch:query-type>
					</elasticsearch:query-configuration>
					<elasticsearch:search-source-configuration
						size="${searchSource.size}" timeout="${searchSource.timeout}" from="${searchSource.from}">
						<elasticsearch:include-fields>
							<elasticsearch:include-field value="${searchMatchQuery.fieldA}" />
						</elasticsearch:include-fields>
						<elasticsearch:exclude-fields>
							<elasticsearch:exclude-field value="${searchMatchQuery.excludeFieldA}" />
							<elasticsearch:exclude-field value="${searchMatchQuery.excludeFieldB}" />
							<elasticsearch:exclude-field value="${searchMatchQuery.excludeFieldC}" />
							<elasticsearch:exclude-field value="${searchMatchQuery.excludeFieldD}" />
						</elasticsearch:exclude-fields>
					</elasticsearch:search-source-configuration>
					<elasticsearch:indices>
						<elasticsearch:index value="${search.index}" />
					</elasticsearch:indices>
				</elasticsearch:search>
				<logger level="INFO" doc:name="Logger"
					doc:id="b4522649-745c-4a32-b6c2-1efd94f03021" message="#[payload]" />
			</when>
			<when expression="#[vars.searchQuery=='match-phrase-query']">
				<elasticsearch:search doc:name="Match Phrase"
					doc:id="ddf3528b-59f0-40df-a763-b2e2d92eca22" config-ref="Elasticsearch_Config"
					searchType="DFS_QUERY_THEN_FETCH">
					<elasticsearch:query-configuration>
						<elasticsearch:query-type >
							<elasticsearch:match-phrase-query
								field="${searchMatchPhrase.field}" queryString="${searchMatchPhrase.queryString}" />
						</elasticsearch:query-type>
					</elasticsearch:query-configuration>
					<elasticsearch:search-source-configuration
						size="${searchSource.size}" timeout="${searchSource.timeout}" sortOrder="ASC" sortByFieldName="${searchMatchPhrase.sortBy}" from="${searchSource.from}">
						<elasticsearch:include-fields>
							<elasticsearch:include-field value="${searchMatchPhrase.fieldA}" />
						</elasticsearch:include-fields>
					</elasticsearch:search-source-configuration>
					<elasticsearch:indices>
						<elasticsearch:index value="${search.index}" />
					</elasticsearch:indices>
				</elasticsearch:search>
				<logger level="INFO" doc:name="Logger"
					doc:id="e58a0d5e-2bba-4fe4-8cdf-3f134013d0a9" message="#[payload]" />
			</when>
			<otherwise>
				<elasticsearch:search doc:name="Match All Query"
					doc:id="de99202c-3df7-4b17-b882-f29cf47e6d91" config-ref="Elasticsearch_Config"
					searchType="QUERY_THEN_FETCH">
					<elasticsearch:query-configuration>
						<elasticsearch:query-type >
							<elasticsearch:match-all-query />
						</elasticsearch:query-type>
					</elasticsearch:query-configuration>
					<elasticsearch:search-source-configuration
						size="${searchSource.size}" timeout="${searchSource.timeout}" from="${searchSource.from}">
						<elasticsearch:include-fields>
							<elasticsearch:include-field value="${searchMatchAll.fieldB}" />
							<elasticsearch:include-field value="${searchMatchAll.fieldA}" />
						</elasticsearch:include-fields>
					</elasticsearch:search-source-configuration>
					<elasticsearch:indices>
						<elasticsearch:index value="${search.index}" />
					</elasticsearch:indices>
				</elasticsearch:search>
				<logger level="INFO" doc:name="Logger"
					doc:id="70571ee6-9112-4e32-b45b-45bf5b90c2ca" message="#[payload]" />
			</otherwise>
		</choice>
	</flow>
</mule>
